audience
  ref audits only while mood == 'blue'
  ref collects tp_ref_values as top 5 [kv2 throughput]
  ref computes tp_ref as avg(tp_ref_values)
  ref watches tp_ref
  ref collects lat99_ref_values as bottom 5 [kv2 lat99]
  ref computes lat99_ref as avg(lat99_ref_values)
  ref watches lat99_ref
  ref only helps

  throughput audits only while mood != 'blue'
  throughput expects always: [kv2 throughput] >= (tp_ref / 2)
  throughput watches kv2 throughput
  throughput watches tp_ref
  throughput measures client ops/s

  #latency_ok	 watches kv2 lat50
  #latency_ok	 watches kv2 lat95
  latency_ok   audits only while mood != 'blue'
  latency_ok   expects always: [kv2 lat99] <= (3 * lat99_ref)
  latency_ok   watches kv2 lat99
  latency_ok   watches lat99_ref
  latency_ok   measures client latency (ms)

  tp_fail watches kv1 throughput
  tp_fail measures client ops/s

  #latency_fail	watches kv1 lat50
  #latency_fail  measures client latency (ms)

  #client_errors    watches every client errors
  #client_errors    measures client errors

  server_events    watches every node warning
  server_events    watches every node error
  server_events    watches every node fatal
  server_events    measures occurrences (y value is source index)

  # Ensure a restart does not last more than 3 seconds.
  # server_restart_checker audits only while [mood] == 'yellow'
  # server_restart_checker expects always: [moodt] < 3
end
