role node is
  :start test -e surl || mkfifo surl; \
			$COCKROACH start --insecure --background \
					   $peers --port=$p --http-port=$h \
					   --pid-file=pid --listening-url-file=surl \
					   >/dev/null 2>&1; \
			cat surl
  cleanup kill $(cat pid) && sleep 1 && kill -9 $(cat pid) || true
  spotlight tail -F cockroach-data/logs/cockroach.log | \
  		  stdbuf -oL grep '^[WEF]' | \
		  stdbuf -oL grep -v 'server is not accepting clients'
  signal   warning event at ^W(?P<ts_log>)\s+\d+\s+\S+\s+(?P<event>.*)$
  signal   error event at  ^E(?P<ts_log>)\s+\d+\s+\S+\s+(?P<event>.*)$
  signal   fatal event at  ^F(?P<ts_log>)\s+\d+\s+\S+\s+(?P<event>.*)$
end

role nemesis is
  :kill $COCKROACH quit --insecure --port=$p
  :restart  cd ../$node && \
        $COCKROACH start --insecure --background  \
		--port=$p --http-port=$h \
		--pid-file=pid --listening-url-file=surl \
		>/dev/null 2>&1; \
		cat surl
end

role client is
  :prepare  $COCKROACH workload init kv --drop --db db$port --pprofport $pprof \
			'postgres://root@localhost:'$port'?sslmode=disable'
  :start	$COCKROACH workload run kv --db db$port --pprofport $pprof \
  			--concurrency 1 --max-rate 200 --cycle-length 10 \
			--display-every .25s --abstime --skip-final-report --tolerate-errors \
			'postgres://root@localhost:'$port'?sslmode=disable' \
			>kv.log 2>&1 & echo $!>wpid
  cleanup	kill $(cat wpid) && sleep 1 && kill -9 $(cat wpid) || true; rm -f kv.log
  spotlight	tail -F kv.log
  signal	errors delta at      ^(?P<ts_rfc3339>)\s+(?P<delta>\S+).*$
  signal	throughput scalar at ^(?P<ts_rfc3339>)\s+\S+\s+(?P<scalar>\S+).*$
  signal	lat50 scalar at      ^(?P<ts_rfc3339>)(?:\s+\S+){3}\s+(?P<scalar>\S+).*$
  signal	lat95 scalar at      ^(?P<ts_rfc3339>)(?:\s+\S+){4}\s+(?P<scalar>\S+).*$
  signal	lat99 scalar at      ^(?P<ts_rfc3339>)(?:\s+\S+){5}\s+(?P<scalar>\S+).*$
end

cast
  n1 plays node(p=26257 h=8081 peers=)
  n2 plays node(p=26258 h=8082 peers=--join=localhost:26257,localhost:26259)
  n3 plays node(p=26259 h=8083 peers=--join=localhost:26257,localhost:26258)
  kv1 plays client(port=26257 pprof=33331)
  kv2 plays client(port=26258 pprof=33332)
  boo plays nemesis(node=n1 p=26257 h=8081)
end

script
  tempo 1s
  action . entails nop
  action s entails :start
  action c entails :prepare; :start
  action F entails mood yellow; :kill; mood red
  action R entails mood yellow; :restart; mood clear
  action C entails mood yellow; :kill;  :restart; mood clear

  prompt every node   s.....................
  prompt every client .c....................
  prompt boo          ......C.....F...R.....
end

audience
  throughput watches kv1 throughput
  throughput watches kv2 throughput
  throughput measures client ops/s

  latency_fail	watches kv1 lat50
  latency_fail  measures client latency (ms)

  latency_ok	 watches kv2 lat50
  latency_ok	 watches kv2 lat95
  latency_ok	 watches kv2 lat99
  latency_ok     measures client latency (ms)

  client_errors    watches every client errors
  client_errors    measures client errors

  server_events    watches every node warning
  server_events    watches every node error
  server_events    watches every node fatal
  server_events    measures occurrences (y value is source index)
end
