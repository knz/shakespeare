parse
audience
  condice expects always: t < 10
end
----
# no roles defined
# no cast defined
script
  tempo 1s
  # no storyline defined, play will terminate immediately
end
audience
  # condice sensitive to t
  condice audits throughout
  condice expects always: t < 10
end
interpretation
  foul upon condice disappointment
  ignore condice satisfaction
end

parse
audience
  condice audits only while true
end
----
# no roles defined
# no cast defined
script
  tempo 1s
  # no storyline defined, play will terminate immediately
end
audience
  condice audits throughout
end


parse
audience
  condice audits only while t < 10
end
----
# no roles defined
# no cast defined
script
  tempo 1s
  # no storyline defined, play will terminate immediately
end
audience
  # condice sensitive to t
  condice audits only while t < 10
end


parse
include doctor.cfg
include medical_cast.cfg
audience
  condice expects always: [alice cures] =~ "cures"
end
----
role doctor
  spotlight true
  signal cures event at (?P<ts_now>)(?P<event>.*)
  :cure echo cured
end
cast
  alice plays doctor
  # alice plays from working directory artifacts/alice
  # alice cures are watched by audience condice
  bob plays doctor with a_hat
  # bob plays from working directory artifacts/bob
end
script
  tempo 1s
  # no storyline defined, play will terminate immediately
end
audience
  # condice sensitive to alice cures
  condice audits throughout
  condice expects always: [alice cures] =~ "cures"
  condice watches alice cures
end
interpretation
  foul upon condice disappointment
  ignore condice satisfaction
end

###
# "like"
##

parse
audience
  albert audits only when t > 3
  albert expects always: true
  bob expects like albert
end
----
# no roles defined
# no cast defined
script
  tempo 1s
  # no storyline defined, play will terminate immediately
end
audience
  # albert sensitive to t
  # bob sensitive to t
  albert audits only while t > 3
  albert expects always: true
  bob audits only while t > 3
  bob expects always: true
end
interpretation
  foul upon albert disappointment
  ignore albert satisfaction
  foul upon bob disappointment
  ignore bob satisfaction
end

parse
audience
  albert expects always: true
  bob audits only when t > 3
  bob expects like albert
end
----
# no roles defined
# no cast defined
script
  tempo 1s
  # no storyline defined, play will terminate immediately
end
audience
  # bob sensitive to t
  albert audits throughout
  albert expects always: true
  bob audits only while t > 3
  bob expects always: true
end
interpretation
  foul upon albert disappointment
  ignore albert satisfaction
  foul upon bob disappointment
  ignore bob satisfaction
end


##
# errors
##

parse
audience
  albert expects like bob
end
----
parse error: <testdata>:2: auditor "bob" not defined
--
while parsing:
<testdata>:1     audience
<testdata>:2   >   albert expects like bob


parse
audience
  bob expects always: t > 0
  albert expects always: t > 3
  albert expects like bob
end
----
parse error: <testdata>:4: only one 'expects' verb is supported at this point
--
while parsing:
<testdata>:2       bob expects always: t > 0
<testdata>:3       albert expects always: t > 3
<testdata>:4   >   albert expects like bob


parse
audience
  bob only helps
  albert expects like bob
end
----
parse error: <testdata>:3: audience member "bob" does not expect anything
--
while parsing:
<testdata>:1     audience
<testdata>:2       bob only helps
<testdata>:3   >   albert expects like bob

parse
include doctor.cfg
include medical_cast.cfg
audience
  condice expects notknown: true
end
----
parse error: <testdata>:4: predicate modality "notknown" not recognized
--
while parsing:
<testdata>:2     include medical_cast.cfg
<testdata>:3     audience
<testdata>:4   >   condice expects notknown: true
HINT: available modalities: always, always eventually, at most once, eventually, eventually always, never, not always, once, thrice, twice

parse
audience
  condice audits unknown
end
----
----
parse error: <testdata>:2: unknown syntax
--
while parsing:
<testdata>:1     audience
<testdata>:2   >   condice audits unknown
HINT: supported syntax:
  # observer david observes feelgood events from doctors
  # (and produces a plot of the observations at the end)
  david watches every doctor feelgood

  # auditor "candice" only pays attention when the mood is blue
  candice audits only while mood == 'blue'

  # auditor "candice" becomes disappointed if forced to pay attention for more than 5 seconds
  candice expects always: t < 5

  # auditor "candice" collects the last 5 feelgood events from "bob" into "bin"
  candice collects bin as last 5 [bob feelgood]

  # auditor "candice" remembers the last time measurement as "last_t"
  candice computes last_t as t

  # auditor "candice" does not produce a final plot
  candice only helps

  # observer "beth" watches computed variable last_t
  beth watches last_t

  # the plot y-label for observer "beth" is "time"
  beth measures time

  # auditor "martin" expects the same as "candice"
  martin expects like candice

----
----
parse
audience
  condice audits only while [a.b]
end
----
parse error: <testdata>:2: invalid syntax: "a.b"
--
while parsing:
<testdata>:1     audience
<testdata>:2   >   condice audits only while [a.b]
HINT: try [a b]
